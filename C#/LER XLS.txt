 public void ler_arquivo(string path)
        {
            //PARAMETRO ARQUIVO A SER LIDO
            FileStream stream = File.Open(path, FileMode.Open, FileAccess.Read);

            #region Operações de Leitura

            //1. Reading from a binary Excel file ('97-2003 format; *.xls)
            IExcelDataReader excelReader = ExcelReaderFactory.CreateBinaryReader(stream);

            //2. Reading from a OpenXml Excel file (2007 format; *.xlsx)
            // IExcelDataReader excelReader = ExcelReaderFactory.CreateOpenXmlReader(stream);

            //3. DataSet - The result of each spreadsheet will be created in the result.Tables
            DataSet result = excelReader.AsDataSet();

            //4. DataSet - Create column names from first row
            excelReader.IsFirstRowAsColumnNames = true;

            #endregion

            #region Ler XLS
            //5. Data Reader methods
            while (excelReader.Read())
            {
                //excelReader.GetInt32(0);
            }

            //6. Free resources (IExcelDataReader is IDisposable)
            excelReader.Close();

            #endregion

            DataTable a = new DataTable();
            int cabecalho = 0;

            #region Colunas
            foreach (DataColumn col in result.Tables[0].Columns)
            {
                a.Columns.Add(col.ColumnName.ToString());
            }

            #endregion

            #region Linhas
            foreach (DataRow row in result.Tables[0].Rows)
            {
                #region cabeçalho
                if (cabecalho == 0)
                {

                    int i = 0;
                    while (i < a.Columns.Count)
                    {

                        a.Columns[i].ColumnName = row[i].ToString();
                        i++;

                    }

                    cabecalho = 1;
                }
                #endregion
                else
                {
                    #region Registros
                    a.Rows.Add();
                    int i = 0;
                    while (i < a.Columns.Count)
                    {

                        int t = a.Rows.Count - 1;
                        a.Rows[t][i] = row[i];
                        i++;

                    }
                    #endregion
                }

            }
            #endregion

            T1 = a;
            //  dataGridView1.DataSource = a;

        }